{"version":3,"sources":["redux/reducers/rootReducer.tsx","redux/configureStore.tsx","data/profile.ts","views/details/components/about.tsx","views/details/components/contact/contact.item.tsx","views/details/components/contact/contact.tsx","app/style.tsx","views/details/components/experience.tsx","views/details/components/personal/personal.item.tsx","views/details/components/personal/personal.tsx","views/details/components/project.tsx","views/details/components/skill/skill.item.tsx","views/details/components/skill/skill.tsx","data/cntuan.jpg","views/details/profile.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["rootReducer","combineReducers","configureStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","profile","name","career","about","personals","image","content","moment","format","subContent","contacts","type","skills","category","list","certificates","experiences","period","title","position","descriptions","projects","useStyles","makeStyles","theme","root","padding","lineBreak","About","props","classes","_jsxs","Box","className","children","_jsx","Typography","variant","component","display","gutterBottom","avatarColor","backgroundColor","ContactItem","ListItem","ListItemAvatar","Avatar","Icon","contact","ListItemText","primary","Link","href","concat","target","color","Contact","List","map","index","createMuiTheme","overrides","MuiCardHeader","paddingBottom","subheader","paddingTop","textAlign","MuiCardContent","MuiTableCell","borderRight","fontSize","verticalAlign","useCommonStyles","tableHeader","drag","cursor","Experience","commonClasses","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","experience","style","width","description","project","PersonalItem","personal","secondary","secondaryTypographyProps","undefined","Personal","Project","marginTop","nested","paddingLeft","spacing","icon","SkillItem","_React$useState","React","useState","_React$useState2","_slicedToArray","open","setOpen","_Fragment","button","onClick","ListItemIcon","skill","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","item","AddIcon","Skill","media","height","cardHeader","paddingRight","marginBottom","alignItems","borderBottom","avatar","margin","border","personalInfo","background","cardFooter","borderTop","printButton","Profile","Container","disableGutters","Card","raised","id","CardMedia","CardHeader","src","Image","titleTypographyProps","subheaderTypographyProps","CardContent","Grid","container","xs","direction","wordBreak","justify","minWidth","store","App","StoreProvider","ThemeProvider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.29915901.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n/** generate reducer for project */\nconst rootReducer = combineReducers({});\n\nexport default rootReducer;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst configureStore = () => {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  /** connect store and reducer */\n  const store = createStore(\n    /** add reducer here */\n    rootReducer,\n\n    /** check redux on browser - apply thunk */\n    composeEnhancers(applyMiddleware(thunk)),\n  );\n\n  return store;\n};\n\nexport default configureStore;\n","import moment from 'moment';\n\nconst profile = {\n  name: 'Cao Ngoc Tuan',\n  career: 'Software Engineer',\n\n  // avatar: '/cntuan.jpg',\n\n  about: `My career path is to become an exellent Fullstack Developer, who can create high quality, secure and friendly products which can satify the expectation of customers.\n\nI look forward to working with a professional team, where i can enjoy learning and sharing to help each other growth, practicing my skills so I can adapt well to the needs and flexible changes of the market.\n\nIt would be great if I had the opportunity to work in an environment where English is the key point because I want to focus training my ability to communicate and work in English.`,\n\n  personals: [\n    {\n      image: 'today',\n      content: moment('1990/12/18').format('LL'),\n    },\n    {\n      image: 'face',\n      content: 'Male',\n    },\n    {\n      image: 'location_on',\n      content: 'District 12, HCMC',\n    },\n    {\n      image: 'school',\n      content: 'The Saigon College For Art Culture And Tourism',\n      subContent: 'Accountancy',\n    },\n  ],\n\n  contacts: [\n    {\n      image: 'phone_iphone',\n      content: '0989275753',\n      type: 'text',\n    },\n    {\n      image: 'email',\n      content: 'cntuan90@gmail.com',\n      type: 'text',\n    },\n    {\n      image: 'message',\n      content: 'live:cntuan90',\n      type: 'text',\n    },\n    {\n      image: 'facebook',\n      content: 'www.facebook.com/cntuan90',\n      type: 'url',\n    },\n    {\n      image: 'work',\n      content: 'https://www.linkedin.com/in/tuan-ngoc-68b586a4/',\n      type: 'url',\n    },\n    {\n      image: 'integration_instructions',\n      content: 'www.github.com/cntuan90',\n      type: 'url',\n    },\n  ],\n\n  skills: [\n    {\n      category: 'Languages',\n      image: 'g_translate',\n      list: ['English (TOEIC 695, IELTS 6.0)', 'Japanese (JLPT N2)'],\n    },\n    {\n      category: 'Programming Languages',\n      image: 'code',\n      list: ['Javascript (Typescript)'],\n    },\n    {\n      category: 'Back-end',\n      image: 'storage',\n      list: ['Node.js, Express.js', 'MySQL, MongoDB'],\n    },\n    {\n      category: 'Front-end',\n      image: 'devices_other',\n      list: ['HTML5, CSS3, Bootstrap 4', 'React.js, React-native, redux', 'Material-UI, React-hook-form'],\n    },\n    // {\n    //   category: 'Automation test',\n    //   image: 'build_circle',\n    //   list: ['Mocha, Chai', 'Jest, Enzyme', 'Puppeteer'],\n    // },\n    {\n      category: 'AWS Cloud (researching)',\n      image: 'cloud',\n      list: ['EC2, ASG, VPC', 'S3, Cloudfront'],\n    },\n    {\n      category: 'Other',\n      image: 'settings',\n      list: [\n        'Docker',\n        'Git, Git flow',\n        'RESTful API',\n        'Github/Gitlab CI/CD',\n      ],\n    },\n  ],\n\n  certificates: [\n    // {\n    //   name: 'AWS Certified Solutions Architect – Associate',\n    //   link: 'https://www.credly.com/badges/b36874f3-2255-43c7-830e-33f6a7859c72?source=linked_in_profile',\n    // },\n    // {\n    //   name: 'Whizlabs certificates',\n    //   isPopup: true,\n    //   images: [\n    //     { name: 'Docker Certified', path: '/certificates/docker.jpg' },\n    //     { name: 'Github Training', path: '/certificates/github.jpg' },\n    //     { name: 'Apache Kafka', path: '/certificates/kafka.jpg' },\n    //   ],\n    // },\n  ],\n\n  experiences: [\n    {\n      period: 'Apr 2022 - Present',\n      title: 'Sharering Vietnam',\n      position: 'Frontend Developer',\n      descriptions: [\n        'Providing IT solutions to adapt customer needs by utilising blockchain technology',\n        'Working as Frontend developer on web and mobile',\n        'Communicating in English with international teams',\n      ],\n      projects: [\n        {\n          name: 'Sharering Application (Mobile & Web)',\n          position: 'Frontend Developer',\n          descriptions: [\n            'An app that customer can use to access events, booking hotel, eKYC, share NFT',\n            'Technologies : Reactjs, React-Native, Typescript, Microservices, Big deeper for explorer, Mixpanel, etc...',\n            'Resource : more than 20 members',\n          ],\n        },\n      ],\n    },\n    {\n      period: 'Apr 2021 - Apr 2022',\n      title: 'MOR SOFTWARE VIETNAM',\n      position: 'Frontend Developer',\n      descriptions: [\n        'Providing IT solutions for Spa system, Hospital system in Japan',\n        'Handling UI and UX, web app',\n        'communicating in Japan with co-workers and clients',\n      ],\n      projects: [\n        {\n          name: 'Spa Management System',\n          position: 'Frontend Developer',\n          descriptions: [\n            'Employee management, spa course booking, calendar arrangement, admin panel management',\n            'Web Application',\n            'Technologies : Reactjs, typescript, redux, material-ui...',\n            'Resource : 10 members',\n            'Period : 9 months',\n          ],\n        },\n        {\n          name: \"Shift Management at Hospital\",\n          position: 'Team Leader',\n          descriptions: [\n            \"Create application for doctor to register shift online, easy to follow the shift\",\n            'Web Application',\n            'Technologies : React.js, typescript, redux, material-ui, ...',\n            'Resource : 4 members',\n            'Period : 3 months',\n          ],\n        },\n      ],\n    },\n    {\n      period: 'Aug 2018 - Mar 2021',\n      title: 'Interfood Shareholding Company',\n      position: 'Japanese Interpreter',\n      descriptions: [\n        'Maintenance budget management',\n        'Supply Chain Management',\n        'Translate between Japanese-Vietnamese for mechanic teams and others',\n      ],\n    },\n    {\n      period: 'Oct 2015 - May 2018',\n      title: 'Isuzu Viet Nam Co., Ltd',\n      position: 'Japanese Interpreter',\n      descriptions: [\n        'After sale services',\n        '5S kaizen, dealer improvement',\n        'Translate between Japanese-Vietnamese for service teams and others',\n      ],\n    },\n  ],\n\n  projects: [\n    // {\n    //   period: 'Mar 2021 - Jul 2021',\n    //   title: 'COLEAD network',\n    //   type: 'Freelance project',\n    //   descriptions: [\n    //     'A social platform aims to connect people in business & startup fields',\n    //     'Using React Native for Mobile platform',\n    //     'Using Express.js (Typescript) for server',\n    //     'Using PostgesSQL server for database',\n    //     'Deploy in AWS cloud server',\n    //   ],\n    // },\n    {\n      period: 'Oct 2020 - May 2021',\n      title: 'To-Do-List, Dressing Room, User Management',\n      type: 'Personal project',\n      descriptions: [\n        'Adding task to list, apply CRUD to control data',\n        'Using vanilla javascript and boottrap',\n      ],\n    },\n    // {\n    //   period: 'Jun 2020 - Feb 2021',\n    //   title: 'SMARTVIETSOLUTION',\n    //   type: 'Freelance project',\n    //   descriptions: [\n    //     'An e-commercial web app which provides website templates for customers with many kinds of business aspect such as food, clothes, electronic and enterprises.',\n    //     'Based on PHP language with Laravel MVC framework',\n    //     'Using Bootstrap to build Web platform',\n    //     'Using MySQL for database',\n    //   ],\n    // },\n    {\n      period: 'Jun 2021 – Present',\n      title: 'Live Chat App, Music-Player, My-Cv',\n      type: 'Personal project',\n      descriptions: [\n        'Application features: real chat app, listen music, add music, CV online',\n        'Using React.js (Typescript) for Web platform',\n        'Using Nodejs, Express.js (Typescript) for server',\n        'Using MySQL, firebase server for database',\n      ],\n    },\n    // {\n    //   period: 'Sep 2017 – Jun 2018',\n    //   title: 'BUILD A GAS LEAKED MONITORING SYSTEM BASED ON WIRELESS NETWORKS',\n    //   type: 'Graduation project',\n    //   descriptions: [\n    //     'Using Arduino for processor and Lora network',\n    //     'Studying C/C++ language as well as HTML, CSS, Javascript for Web platform',\n    //     'Learning the knowledge of wireless sensor networks',\n    //   ],\n    // },\n  ],\n};\n\nexport type ProfileType = typeof profile;\nexport type PersonalType = typeof profile.personals[0];\nexport type ContactType = typeof profile.contacts[0];\nexport type SkillType = typeof profile.skills[0];\nexport type ProjectType = typeof profile.projects[0];\nexport type CertificateImage = { name: string; path: string };\n\nexport default profile;\n","import { Box, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { ProfileType } from '../../../data/profile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 30,\n  },\n  lineBreak: {\n    // lineBreak: 'normal',\n  },\n}));\n\ninterface Props {\n  profile: ProfileType;\n}\n\nconst About: React.FC<Props> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h5\" component=\"h2\" display=\"block\" gutterBottom>\n        <strong>ABOUT</strong>\n      </Typography>\n      <Typography variant=\"h6\" className={classes.lineBreak}>\n        {props.profile.about}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default About;\n","import {\n  Avatar,\n  Icon,\n  Link,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport React from 'react';\nimport { ContactType } from '../../../../data/profile';\n\nconst useStyles = makeStyles(() => ({\n  avatarColor: {\n    backgroundColor: '#546e7a',\n  },\n}));\n\ninterface Props {\n  contact: ContactType;\n}\n\nconst ContactItem: React.FC<Props> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <Avatar className={classes.avatarColor}>\n          <Icon>{props.contact.image}</Icon>\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={\n          props.contact.type === 'url' ? (\n            <Link href={`https://${props.contact.content}`} target=\"_blank\" color=\"inherit\">\n              {props.contact.content}\n            </Link>\n          ) : (\n            props.contact.content\n          )\n        }\n      />\n    </ListItem>\n  );\n};\n\nexport default ContactItem;\n","import { Box, List, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { ProfileType } from '../../../../data/profile';\nimport ContactItem from './contact.item';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    color: '#eeeeee',\n    padding: 30,\n    // padding: '30px 20px',\n  },\n}));\n\ninterface Props {\n  profile: ProfileType;\n}\n\nconst Contact: React.FC<Props> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h5\" component=\"h2\" display=\"block\" gutterBottom>\n        <strong>CONTACTS</strong>\n      </Typography>\n\n      <List>\n        {props.profile.contacts.map((contact, index) => (\n          <ContactItem key={index} contact={contact} />\n        ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default Contact;\n","import { createMuiTheme, makeStyles } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  overrides: {\n    MuiCardHeader: {\n      title: {\n        paddingBottom: 20,\n        color: 'white',\n      },\n      subheader: {\n        paddingTop: 10,\n        textAlign: 'end',\n      },\n    },\n    MuiCardContent: {\n      root: {\n        padding: 0,\n      },\n    },\n    MuiTableCell: {\n      root: {\n        padding: '10px',\n        borderRight: '1px solid rgba(224, 224, 224, 1)',\n        fontSize: 'inherit',\n        verticalAlign: 'top',\n      },\n    },\n  },\n});\n\nexport const useCommonStyles = makeStyles(() => ({\n  tableHeader: {\n    backgroundColor: '#29b6f6',\n    color: '#eeeeee',\n  },\n  drag: {\n    cursor: 'grab',\n    '&:active': {\n      cursor: 'grabbing',\n    },\n  },\n}));\n","import {\n  Box,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport { useCommonStyles } from '../../../app/style';\nimport { ProfileType } from '../../../data/profile';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    padding: 30,\n  },\n}));\n\ninterface Props {\n  profile: ProfileType;\n}\n\nconst Experience: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  const commonClasses = useCommonStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h5\" component=\"h2\" display=\"block\" gutterBottom>\n        <strong>WORK EXPERIENCES</strong>\n      </Typography>\n\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={commonClasses.tableHeader}>\n                <Typography>\n                  <strong>PRIOD</strong>\n                </Typography>\n              </TableCell>\n              <TableCell className={commonClasses.tableHeader}>\n                <Typography>\n                  <strong>COMPANIES</strong>\n                </Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.profile.experiences.map((experience, index) => (\n              <TableRow key={index}>\n                <TableCell>\n                  <Typography style={{ width: 90 }}>{experience.period}</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"h6\" component=\"h2\" display=\"block\">\n                    <strong>{experience.title}</strong>\n                  </Typography>\n\n                  <Typography component=\"span\">\n                    {experience.position}\n                    <ul>\n                      {experience.descriptions.map((description, index) => (\n                        <li key={index}>{description}</li>\n                      ))}\n                    </ul>\n                  </Typography>\n\n                  {experience.projects && (\n                    <TableContainer component={Paper}>\n                      <Table size=\"small\">\n                        <TableHead>\n                          <TableRow>\n                            <TableCell className={commonClasses.tableHeader}>\n                              <Typography>NAME</Typography>\n                            </TableCell>\n                            <TableCell className={commonClasses.tableHeader}>\n                              <Typography>DESCRIPTION</Typography>\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {experience.projects.map((project, index) => (\n                            <TableRow key={index}>\n                              <TableCell>\n                                <Typography gutterBottom>\n                                  <b>{project.name}</b>\n                                </Typography>\n                                <Typography>{project.position}</Typography>\n                              </TableCell>\n                              <TableCell>\n                                <ul>\n                                  {project.descriptions.map((description, index) => (\n                                    <li key={index}>\n                                      <Typography>{description}</Typography>\n                                    </li>\n                                  ))}\n                                </ul>\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default Experience;\n","import {\n  Avatar,\n  Icon,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport React from 'react';\nimport { PersonalType } from '../../../../data/profile';\n\nconst useStyles = makeStyles(() => ({\n  avatarColor: {\n    backgroundColor: '#546e7a',\n  },\n}));\n\ninterface Props {\n  personal: PersonalType;\n}\n\nconst PersonalItem: React.FC<Props> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <Avatar className={classes.avatarColor}>\n          <Icon>{props.personal.image}</Icon>\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={props.personal.content}\n        secondary={props.personal.subContent}\n        secondaryTypographyProps={props.personal.subContent ? { color: 'inherit' } : undefined}\n      />\n    </ListItem>\n  );\n};\n\nexport default PersonalItem;\n","import { Box, List, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { ProfileType } from '../../../../data/profile';\nimport PersonalItem from './personal.item';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    color: '#eeeeee',\n    padding: 30,\n  },\n}));\n\ninterface Props {\n  profile: ProfileType;\n}\n\nconst Personal: React.FC<Props> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h5\" component=\"h2\" display=\"block\" gutterBottom>\n        <strong>PERSONAL INFORMATIONS</strong>\n      </Typography>\n\n      <List>\n        {props.profile.personals.map((personal, index) => (\n          <PersonalItem key={index} personal={personal} />\n        ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default Personal;\n","import {\n  Box,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport { useCommonStyles } from '../../../app/style';\nimport { ProfileType } from '../../../data/profile';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    // marginTop: 200,\n    padding: 30,\n  },\n}));\n\ninterface Props {\n  profile: ProfileType;\n}\n\nconst Project: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  const commonClasses = useCommonStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h5\" component=\"h2\" display=\"block\" gutterBottom>\n        <strong>PERSONAL PROJECTS</strong>\n      </Typography>\n\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={commonClasses.tableHeader}>\n                <Typography>\n                  <strong>PRIOD</strong>\n                </Typography>\n              </TableCell>\n              <TableCell className={commonClasses.tableHeader}>\n                <Typography>\n                  <strong>PROJECTS</strong>\n                </Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.profile.projects.map((project, index) => (\n              <TableRow key={index}>\n                <TableCell style={{ width: 90 }}>\n                  <Typography>{project.period}</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"h6\" component=\"h2\" display=\"block\">\n                    <strong>{project.title}</strong>\n                  </Typography>\n                  <Typography component=\"span\">\n                    {project.type}\n                    <ul>\n                      {project.descriptions.map((description, index) => (\n                        <li key={index}>{description}</li>\n                      ))}\n                    </ul>\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default Project;\n","import {\n  Collapse,\n  Icon,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport React from 'react';\nimport { SkillType } from '../../../../data/profile';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    marginTop: 10,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  icon: {\n    color: '#eeeeee',\n  },\n}));\n\ninterface Props {\n  skill: SkillType;\n}\n\nconst SkillItem: React.FC<Props> = (props) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => setOpen(!open);\n\n  return (\n    <>\n      <ListItem button onClick={handleClick} className={classes.list}>\n        <ListItemIcon>\n          {/* {props.skill.image} */}\n          <Icon fontSize=\"large\" className={classes.icon}>\n            {props.skill.image}\n          </Icon>\n        </ListItemIcon>\n        <ListItemText primary={props.skill.category} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {props.skill.list.map((item, index) => (\n            <ListItem key={index} className={classes.nested}>\n              <ListItemIcon>\n                <AddIcon className={classes.icon} fontSize=\"large\" />\n              </ListItemIcon>\n              <ListItemText primary={item} />\n            </ListItem>\n          ))}\n        </List>\n      </Collapse>\n    </>\n  );\n};\n\nexport default SkillItem;\n","import { Box, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { ProfileType } from '../../../../data/profile';\nimport SkillItem from './skill.item';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // marginTop: 435,\n    color: '#eeeeee',\n    padding: 30,\n    // padding: '30px 20px',\n  },\n  list: {\n    marginTop: 10,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  icon: {\n    color: '#eeeeee',\n  },\n}));\n\ninterface Props {\n  profile: ProfileType;\n}\n\nconst Skill: React.FC<Props> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h5\" component=\"h2\" display=\"block\" gutterBottom>\n        <strong>SKILLS</strong>\n      </Typography>\n\n      {props.profile.skills.map((skill, index) => (\n        <SkillItem key={index} skill={skill} />\n      ))}\n    </Box>\n  );\n};\n\nexport default Skill;\n","export default __webpack_public_path__ + \"static/media/cntuan.7ff84de4.jpg\";","import {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Container,\n  Grid,\n  Link,\n  makeStyles,\n} from '@material-ui/core';\nimport React from 'react';\nimport profile from '../../data/profile';\nimport About from './components/about';\n// import Certificate from './components/certificate/certificate';\nimport Contact from './components/contact/contact';\nimport Experience from './components/experience';\nimport Personal from './components/personal/personal';\nimport Project from './components/project';\nimport Skill from './components/skill/skill';\nimport Image from '../../data/cntuan.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 0,\n    paddingTop: 160,\n  },\n  cardHeader: {\n    paddingLeft: 90,\n    paddingRight: 90,\n    marginTop: -150,\n    marginBottom: 0,\n    alignItems: 'right',\n    borderBottom: '1px solid black',\n    '& .MuiCardHeader-title': {\n      color: 'rgba(0, 0, 0, 0.54)',\n    }\n  },\n  avatar: {\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n    margin: 20,\n    border: '5px solid white',\n  },\n  personalInfo: {\n    background: 'linear-gradient(45deg, #01579b 40%, #29b6f6 80%)',\n  },\n  cardFooter: {\n    borderTop: '1px solid black',\n    color: '#eeeeee',\n    backgroundColor: '#01579b',\n    height: 40,\n  },\n  printButton: {\n    borderBottom: '1px solid black',\n    padding: 10,\n    color: '#eeeeee',\n  },\n  avatarColor: {\n    backgroundColor: '#546e7a',\n  },\n}));\n\nconst Profile: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Container disableGutters>\n      <Card raised id=\"detail\">\n        <CardMedia className={classes.media} image=\"/background.jpg\" />\n\n        <CardHeader\n          className={classes.cardHeader}\n          avatar={<Avatar src={Image} className={classes.avatar} />}\n          title={profile.name}\n          titleTypographyProps={{ variant: 'h4' }}\n          subheader={profile.career}\n          subheaderTypographyProps={{ variant: 'h5' }}\n        />\n\n        <CardContent>\n          <Grid container>\n            <Grid container item xs={4} className={classes.personalInfo} direction=\"column\">\n              <Container disableGutters style={{ wordBreak: 'break-all' }}>\n                <Personal profile={profile} />\n                <Contact profile={profile} />\n                <Skill profile={profile} />\n              </Container>\n            </Grid>\n\n            <Grid container item xs={8}>\n              <Container disableGutters>\n                <About profile={profile} />\n                {/* <Certificate profile={profile} /> */}\n                <Experience profile={profile} />\n                <Project profile={profile} />\n              </Container>\n            </Grid>\n\n            <Grid\n              container\n              item\n              xs={12}\n              className={classes.cardFooter}\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              Powered by{' '}\n              <Link href=\"https://material-ui.com\" target=\"_blank\" color=\"inherit\">\n                @Material-UI\n              </Link>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import { Box, makeStyles, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport { Provider as StoreProvider } from 'react-redux';\nimport configureStore from '../redux/configureStore';\nimport Profile from '../views/details/profile';\nimport { theme } from './style';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    minWidth: 800,\n    marginTop: '-35px',\n    marginBottom: '-55px',\n  },\n}));\n\nconst store = configureStore();\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <StoreProvider store={store}>\n      <ThemeProvider theme={theme}>\n        <Box className={classes.root}>\n          <Profile />\n        </Box>\n      </ThemeProvider>\n    </StoreProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(\n  swUrl: string,\n  config: {\n    onUpdate: (arg0: ServiceWorkerRegistration) => void;\n    onSuccess: (arg0: ServiceWorkerRegistration) => void;\n  },\n) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}